apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId "com.example.android.architecture.blueprints.todomvp"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        flavorDimensions "debug"
    }

    buildTypes {
        debug {
            minifyEnabled true
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "debug"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "debug"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["espresso-idling-resource"]
    implementation rootProject.ext.dependencies["guava"]


    // Dependencies for local unit tests
    testImplementation rootProject.ext.dependencies["junit"]
    testImplementation rootProject.ext.dependencies["mockito-all"]
    testImplementation rootProject.ext.dependencies["hamcrest-all"]

    // Android Testing Support Library's runner and rules
    androidTestImplementation rootProject.ext.dependencies["test-runner"]
    androidTestImplementation rootProject.ext.dependencies["test-rules"]

    // Dependencies for Android unit tests
    androidTestImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["mockito-core"]
    androidTestImplementation rootProject.ext.dependencies["dexmaker"]
    androidTestImplementation rootProject.ext.dependencies["dexmaker-mockito"]

    // Espresso UI Testing
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    androidTestImplementation rootProject.ext.dependencies["espresso-contrib"]
    androidTestImplementation rootProject.ext.dependencies["espresso-intents"]

    // Resolve conflicts between main and test APK:
    androidTestImplementation rootProject.ext.dependencies["support-annotations"]
    androidTestImplementation rootProject.ext.dependencies["support-v4"]
    androidTestImplementation rootProject.ext.dependencies["recyclerview-v7"]
    androidTestImplementation rootProject.ext.dependencies["appcompat-v7"]
    androidTestImplementation rootProject.ext.dependencies["design"]
}
